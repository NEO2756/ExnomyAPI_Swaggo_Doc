{
    "schemes": [
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "This is Exnomy API Server.",
        "title": "Exnomy API Swagger Documentation",
        "termsOfService": "https://www.exnomy.com/terms-and-privacy",
        "contact": {
            "name": "Exnomy Support",
            "url": "https://www.exnomy.com/terms-and-privacy",
            "email": "info@dexhigh.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "https://github.com/blockbankcoltd/Exnomy/blob/master/LICENSE"
        },
        "version": "1.0"
    },
    "host": "api.exnomy.com",
    "paths": {
        "/assets": {
            "get": {
                "description": "**Get All the assets available on the exchange**\n```\n{\n\"status\": int,    [STATUS CODE, 0 for Success , Greater than 0 for ERROR]\n\"desc\": \"string\", [Description String for Success and Failure]\n\"data\": {\n\"tokens\": [\n{\n\"symbol\": \"string\"\t\t\t\t\t\t\t\t[Symbol of the asset, ex - BTC]\n\"name\": \"string\",\t\t\t\t\t\t\t\t[Name of the asset, ex - Bitcoin]\n\"Address\": \"string\", \t\t\t\t\t\t\t[Exnomy Smart contract specific address]\n\"Decimal\": int,\t\t\t\t\t\t\t\t\t[Decimal of the asset]\n\"updatedAt\": \"time\",\t\t\t\t\t\t\t\t[Time when asset updated in DB]\n\"createdAt\": \"time\"\t\t\t\t\t\t\t\t[Time when asset created in DB]\n}\n]\n}",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Show all assets present at exnomy.com",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.Response"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ApiError"
                        }
                    }
                }
            }
        },
        "/markets": {
            "get": {
                "description": "**Find published markets from db and attach last 24hr market status for each market**\n```\n{\n\"status\": int,\t\t\t\t\t\t\t\t\t\t[Status Code, 0 for Success , Greater than 0 for ERROR]\n\"desc\": \"string\",\t\t\t\t\t\t\t\t\t[Description String for Success and Failue]\n\"data\": \"Array Of Objects\",\t\t\t\t\t\t\t[Array of Market Object]\n\"markets\": [   [Market Model]\n{\n\"id\": \"string\",                \t\t\t[Market ID, Symbol Pair ex - XRP-BTC]\n\"baseToken\": \"string\", \t\t\t\t\t[SYMBOL of the Base Token, ex - XRP]\n\"baseTokenProjectUrl\": \"URI\", \t\t\t[OPTIONAL, URL of the BaseToken Projet, ex - www.ripple.com]\n\"baseTokenName\": \"string\", \t\t\t\t[NAME of the Base Token, ex - Riple]\n\"baseTokenDecimals\": int, \t\t\t\t[DECIMAL of the Base Token, ex - 8]\n\"baseTokenAddress\": \t\t\t\t\t[ADDRESS of the Base Token],\n\"quoteToken\": \"string\", \t\t\t\t[SYMBOL of the Quote Token, ex - BTC]\n\"quoteTokenDecimals\": int, \t\t\t\t[DECIMAL of the Quote Token, ex - 8]\n\"quoteTokenAddress\": string, \t\t\t[ADDRESS of the Base Token]\n\"minOrderSize\": \"string\", \t\t\t\t[MINIMUM order size for BASE-QUOTE token pair, ex- 0.0001]\n\"pricePrecision\": int, \t\t\t\t\t[PRECISION FOR PRICE for BASE-QUOTE token pair, ex- 5]\n\"priceDecimals\": int, \t\t\t\t\t[DECIMAL FOR PRICE for BASE-QUOTE token pair, ex- 8]\n\"amountDecimals\": int, \t\t\t\t\t[DECIMALS FOR AMOUNT for BASE-QUOTE token pair, ex- 6]\n\"asMakerFeeRate\": \"string\", \t\t\t[MAKER fee rate string for BASE-QUOTE token pair]\n\"asTakerFeeRate\": \"string\", \t\t\t[TAKER fee rate string for BASE-QUOTE token pair]\n\"gasFeeAmount\": \"string\",   \t\t\t[NOT applicable]\n\"supportedOrderTypes\": [   \t\t\t\t[only LIMIT is supported right now]\n\"limit\",\n\"market\"\n],\n\"marketOrderMaxSlippage\": \"string\",\t\t[FUTURE USE, Not applicable right now]\n\"lastPriceIncrease\": \"string\",      \t[LAST PRICE INCREASE value]\n\"lastPrice\": \"string\",              \t[Last Traded Price]\n\"price24h\": \"string\",\t\t\t\t\t[PRICE CHANGE in last 24hrs, ex - +0.3 % OR -0.4 %]\n\"amount24h\": \"string\",\t\t\t\t\t[LAST 24hr TOTAL AMOUNT CHANGE]\n\"quoteTokenVolume24h\": \"246789\"     \t[VOLUME of LAST 24Hr Traded QUOTE TOKEN]\n}\n]\n}\n}",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Show all Published markets",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.Response"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ApiError"
                        }
                    }
                }
            }
        },
        "/markets/{marketID}/candles": {
            "get": {
                "description": "**Get high, low, open, close and volume data for an interval defined between 'from' to 'to' unix timestamps.**\n```\n{\n\"status\": int,    [STATUS CODE, 0 for Success , Greater than 0 for ERROR]\n\"desc\": \"string\", [Description String for Success and Failure]\n\"data\": {\n\"candles\": [  [Candle Information]\n{\n\"time\": int,    [Unix timestamp of Candle, ex - 1574232000]\n\"open\": \"string\",  [Open Price in this TimeStamp]\n\"close\": \"string\", [Close Price in this Timestamp]\n\"low\": \"string\",   [Lowest Trade Price in this timestamp]\n\"high\": \"string\",  [Highest timetsamp in this timestamp]\n\"volume\": \"string\" [Total traded volume in this timestamp]\n}\n]\n}\n}\n```",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get Bar data from 'from' to 'to'.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Market ID, ex XRP-BTC",
                        "name": "marketID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "from",
                        "name": "from",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "to",
                        "name": "to",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "granularity",
                        "name": "granularity",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.Bar"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ApiError"
                        }
                    }
                }
            }
        },
        "/markets/{marketID}/orderbook": {
            "get": {
                "description": "**Find the latest snapshot version 2 corresponding to MarketID**\n```\n{\n\"status\": int,    \t\t\t\t[Status Code, 0 for Success , Greater than 0 for ERROR]\n\"desc\": \"string\", \t\t\t\t[Description String for Success and Failure]\n\"data\": {\n\"orderBook\": {\n\"sequence\": int, \t\t[Database specific Sequence Number]\n\"bids\": \t\t\t\t[\"Array of Objects\", [Array bids Object]\n[\n\"string\", \t\t[Bid Price, ex - \"0.00003108\"]\n\"string\", \t\t[Bif Amount, ex - \"330\"]\n]\n],\n\"asks\": \t\t\t\t[Array of Objects, [Array asks Object]\n[\n\"string\", \t\t[Ask price, ex - \"0.00003108\"]\n\"string\", \t\t[Ask Amount, ex - \"330\"]\n]\n]\n}\n}\n}",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get OrderBook for a particular market ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "MarketID (ex: XRP-BTC)",
                        "name": "marketID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SnapshotV2"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ApiError"
                        }
                    }
                }
            }
        },
        "/markets/{marketID}/trades": {
            "get": {
                "description": "**Find all the trades for a particular market**\n```\n{\n\"status\": int,    [STATUS CODE, 0 for Success , Greater than 0 for ERROR]\n\"desc\": \"string\", [Description String for Success and Failure]\n\"data\": {\n\"count\": int,   [Size of the trades array object]\n\"trades\": [     [Array of Objects]\n{\n\"id\": int,   [DB Speacific Trade ID ]\n\"transactionID\": 36671, [DB Speacific Transaction ID]\n\"transactionHash\": [Hash of Trade Transaction on Blockchain ex - 0xfba0a551880a7a9458fdcd9e55078645da4a11c399be91efdd19a6a82014e731],\n\"status\": \"string\", [Status of the Trade transaction, ex - successful, pending, canceled]\n\"marketID\": \"string\", [Market ID, ex - XRP-BTC]\n\"maker\": \"string\", [Maker Account Address ex - 0x31ebd457b999bf99759602f5ece5aa5033cb56b3]\n\"taker\": \"string\", [Taker Account Address ex - 0x31ebd457b999bf99759602f5ece5aa5033cb56b3],\n\"takerSide\": \"string\", [Side of Taker order ex - but OR sell]\n\"makerOrderID\": \"string, [OrderID of Maker, ex - 0xbf9abcaa08bb820f791206564d261e3e36309ac16f5b091e507f0b14fb369656],\n\"takerOrderID\": \"string, [OrderID of Taker, ex - 0xbf9abcaa08bb820f791206564d261e3e36309ac16f5b091e507f0b14fb369656],\n\"sequence\": uint, [DB specific sequence number]\n\"amount\": \"uint\", [Amount/Quantity of trade, ex - 230]\n\"price\": \"string\", [Price of Trade, ex - 0.00003096]\n\"executedAt\": \"time\", [Time When Trade executed,  ex - 2019-11-20T08:36:26Z]\n\"createdAt\": \"time\",  [Time When Trade created,  ex - 2019-11-20T08:36:26Z]\n\"updatedAt\": \"time\",  [Time When Trade executed,  ex - 2019-11-20T08:36:26Z]\n}\n]\n}\n}\n```",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Show all trades for a market",
                "parameters": [
                    {
                        "type": "string",
                        "description": "MarketID (ex XRP-BTC)",
                        "name": "marketID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.QueryTradeResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ApiError"
                        }
                    }
                }
            }
        },
        "/orders": {
            "get": {
                "description": "**Find latest 'N' specified orders, 20 if 'N' is not specifies corresponding to particular MarketID and user address**\n```\n\"status\": int,    [STATUS CODE, 0 for Success , Greater than 0 for ERROR]\n\"desc\": \"string\", [Description String for Success and Failure]\n\"data\": {\n\"count\": int, \t\t\t\t\t   [Size of the Order Array]\n\"orders\": [\t\t\t\t\t       [Order Array]\n{\n\"id\": \"string\",                [Order ID of the Requested Order ex - 0x8d9cafdbed805fb495f7e29c9cf7a269e140f326701f388e77d840228134b103]\n\"traderAddress\": \"string\",     [Address of the Trader used for Logging In],\n\"marketID\": \"string\",          [Market ID of the order, ex - XRP-BTC]\n\"side\": \"string\",              [Side of the Order, ex - buy OR sell]\n\"price\": \"string\",             [Price of the Order, ex - 0.00003081]\n\"amount\": \"string\",            [Amount of the Order, ex - 160]\n\"status\": \"string\",            [Status of the order, canceled, pending, partial_filled OR full_filled]\n\"type\": \"string\",              [Order type Limit or Market, Limit is only supported right now]\n\"version\": \"string\",           [verison of the platform]\n\"availableAmount\": \"string\",   [Amount available to Trade]\n\"confirmedAmount\": \"string\",   [Traded amount, confirmed on blockchain]\n\"canceledAmount\": \"string\",    [canceled Amount]\n\"pendingAmount\": \"string\",     [Left Over Amount for trading, Incase of partial fills]\n\"makerFeeRate\": \"string\",      [makerFee Rate]\n\"takerFeeRate\": \"string\",      [Taker fee Rate]\n\"makerRebateRate\": \"string\",   [makerRebateRate]\n\"gasFeeAmount\": \"string\",      [Gas fee Amount in terms of specified tokens, NOT APPLICABLE in EXNOMY]\n\"json\": \"string\",              [josn string of this order]\n\"createdAt\": \"time\", \t\t   [time at which has been created, ex - 2019-11-20T10:07:52.523606Z]\n\"updatedAt\": \t\t\t\t   [time at which has been updated, ex - 2019-11-20T10:07:52.523606Z]\n}\n]\n}\n}\n```",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Show orders, reverse-chrono order.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "MarketID ex - XRP-BTC",
                        "name": "marketID",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "**DEX-AUTH-TOKEN is combination of \u003c'AccountAddress'\u003e#DEX-EXONOMY-AUTH#\u003cSignature of Str 'DEX-EXNOMY-AUTH'\u003e**, ex - 0x31ebd457b999bf99759602f5ece5aa5033cb56b3#DEX-EXONOMY-AUTH#0xe99ac942cc4e126e62e1a98c756bf3e3e09de1dc5cbead6b02992063084af399120a45642a8e2876c608d43f11aaa07d7511d338e7d7d4acdc91e1e90c05e3581c",
                        "name": "DEX-EXONOMY-AUTH",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.QueryOrderResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ApiError"
                        }
                    }
                }
            },
            "post": {
                "description": "**Place order put the order in order book OR execute a match**\n**Place Order API works only within 60sec of BuildOrder else otherwise order will be dropped**\n```\nRequest Body\n{\n\"address\": \"string\",        [Wallet Address]\n\"ID\": \"string\"  \t\t\t[Order ID in response to /orders/build ]\n\"Signature\" : \"string\" \t\t[Signature of Order ID]\n}\nNOTE: Signature = '0x' + sig.slice(130) + '0'.repeat(62) + sig.slice(2, 130);\nsig =\u003e sig for above expression can be obtained using any wallet like Metamask, MyEtherwallet etc, Pls refer below links\n```\n[MyETherWallet](https://blog.tenx.tech/sign-message-instructions-for-ethereum-address-verification-2c8caee4c3af/)\n[Metamask](https://medium.com/metamask/the-new-secure-way-to-sign-data-in-your-browser-6af9dd2a1527)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Place the order in order book / Execute if match.",
                "parameters": [
                    {
                        "description": "Place Order request",
                        "name": "orderSig",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.PlaceOrderReq"
                        }
                    },
                    {
                        "type": "string",
                        "description": "**DEX-AUTH-TOKEN is combination of \u003c'AccountAddress'\u003e#DEX-EXONOMY-AUTH#\u003cSignature of Str 'DEX-EXNOMY-AUTH'\u003e**, ex - 0x31ebd457b999bf99759602f5ece5aa5033cb56b3#DEX-EXONOMY-AUTH#0xe99ac942cc4e126e62e1a98c756bf3e3e09de1dc5cbead6b02992063084af399120a45642a8e2876c608d43f11aaa07d7511d338e7d7d4acdc91e1e90c05e3581c",
                        "name": "DEX-EXONOMY-AUTH",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {},
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ApiError"
                        }
                    }
                }
            }
        },
        "/orders/build": {
            "post": {
                "description": "**Builds Order data and Cache the order which will be reused at the time of PlaceOrder**\n```\nRequest Body\n{\n\"address\": \"string\",\t\t[Wallet Address]\n\"amount\": \"string\",\t\t\t[Amount of the Order]\n\"expires\": 0,\t\t\t\t[Time when order can expire, Optional param]\n\"marketID\": \"string\",\t\t[Market ID, ex - XRP-BTC]\n\"orderType\": \"string\",\t\t[Type of Order, Limit or Market, Only Limit is Supported right now]\n\"price\": \"string\",\t\t\t[Price of the Order]\n\"side\": \"string\"\t\t\t[side of order, Buy OR Sell]\n}\nResponse Body\n{\n\"amount\": 0, \t\t\t\t[Amount of Order]\n\"asMakerFeeRate\": 0,\t\t[Maker Fee Rate]\n\"asTakerFeeRate\": 0,\t\t[Taker Fee Rate]\n\"gasFeeAmount\": 0,\t\t\t[gasFeeAmount, Not Applicable  right now]\n\"id\": \"string\",\t\t\t\t[Generated ID of the order]\n\"json\": \"string\",\t\t\t[json string of Order]\n\"makerRebateRate\": 0,\t\t[Maker FRebate rate]\n\"marketID\": \"string\",\t\t[market ID, ex - XRP-BTC]\n\"price\": 0,\t\t\t\t\t[Price of the order]\n\"side\": \"string\",\t\t\t[side of order, Buy OR Sell]\n\"type\": \"string\"\t\t\t[Type of Order, Limit or Market, Only Limit is Supported right now]\n}\n```",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Build an Order.",
                "parameters": [
                    {
                        "description": "Build Order request",
                        "name": "buildParams",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.BuildOrderReq"
                        }
                    },
                    {
                        "type": "string",
                        "description": "**DEX-AUTH-TOKEN is combination of \u003c'AccountAddress'\u003e#DEX-EXONOMY-AUTH#\u003cSignature of Str 'DEX-EXNOMY-AUTH'\u003e**, ex - 0x31ebd457b999bf99759602f5ece5aa5033cb56b3#DEX-EXONOMY-AUTH#0xe99ac942cc4e126e62e1a98c756bf3e3e09de1dc5cbead6b02992063084af399120a45642a8e2876c608d43f11aaa07d7511d338e7d7d4acdc91e1e90c05e3581c",
                        "name": "DEX-EXONOMY-AUTH",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.BuildOrderResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ApiError"
                        }
                    }
                }
            }
        },
        "/orders/{OrderID}": {
            "delete": {
                "description": "**Find the order with ID specified as OrderID and Mark it cancel.**",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Cancel particular order.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "OrderID",
                        "name": "OrderID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "**DEX-AUTH-TOKEN is combination of \u003c'AccountAddress'\u003e#DEX-EXONOMY-AUTH#\u003cSignature of Str 'DEX-EXNOMY-AUTH'\u003e**, ex - 0x31ebd457b999bf99759602f5ece5aa5033cb56b3#DEX-EXONOMY-AUTH#0xe99ac942cc4e126e62e1a98c756bf3e3e09de1dc5cbead6b02992063084af399120a45642a8e2876c608d43f11aaa07d7511d338e7d7d4acdc91e1e90c05e3581c",
                        "name": "DEX-EXONOMY-AUTH",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.CancelOrderReq"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ApiError"
                        }
                    }
                }
            }
        },
        "/orders/{orderID}": {
            "get": {
                "description": "**Get order corresponding to a particular order ID**\n```\n{\n\"status\": int,    [STATUS CODE, 0 for Success , Greater than 0 for ERROR]\n\"desc\": \"string\", [Description String for Success and Failure]\n\"data\": {\n\"order\": {\n\"id\": \"string\",                [Order ID of the Requested Order ex - 0x8d9cafdbed805fb495f7e29c9cf7a269e140f326701f388e77d840228134b103]\n\"traderAddress\": \"string\",     [Address of the Trader used for Loging In],\n\"marketID\": \"string\",          [Market ID of the order, ex - XRP-BTC]\n\"side\": \"string\",              [Side of the Order, ex - buy OR sell]\n\"price\": \"string\",             [Price of the Order, ex - 0.00003081]\n\"amount\": \"string\",            [Amount of the Order, ex - 160]\n\"status\": \"string\",            [Status of the order, canceled, pending, partial_filled OR full_filled]\n\"type\": \"string\",              [Order type Limit or Market, Limit is only supported right now]\n\"version\": \"string\",           [verison of the platform]\n\"availableAmount\": \"string\",   [Amount available fto Trade]\n\"confirmedAmount\": \"string\",   [Traded amount, confirmed on blockchain]\n\"canceledAmount\": \"string\",    [canceled Amount]\n\"pendingAmount\": \"string\",     [Left Over Amount for trading, Incase of partial fills]\n\"makerFeeRate\": \"string\",      [makerFee Rate]\n\"takerFeeRate\": \"string\",      [Taker fee Rate]\n\"makerRebateRate\": \"string\",   [makerRebateRate ]\n\"gasFeeAmount\": \"string\",      [Gas fee Amount in terms of specified tokens, NOT APPLICABLE in EXNOMY]\n\"json\": \"string\",              [josn string of this order]\n\"createdAt\": \"time\", \t\t   [time at which has been created, ex - 2019-11-20T10:07:52.523606Z]\n\"updatedAt\": \t\t\t\t   [time at which has been updated, ex - 2019-11-20T10:07:52.523606Z]\n}\n}\n}\n```",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get Single order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "OrderID",
                        "name": "orderID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "**DEX-AUTH-TOKEN is combination of \u003c'AccountAddress'\u003e#DEX-EXONOMY-AUTH#\u003cSignature of Str 'DEX-EXNOMY-AUTH'\u003e**, ex - 0x31ebd457b999bf99759602f5ece5aa5033cb56b3#DEX-EXONOMY-AUTH#0xe99ac942cc4e126e62e1a98c756bf3e3e09de1dc5cbead6b02992063084af399120a45642a8e2876c608d43f11aaa07d7511d338e7d7d4acdc91e1e90c05e3581c",
                        "name": "DEX-EXONOMY-AUTH",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.QuerySingleOrderResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ApiError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.ApiError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "desc": {
                    "type": "string"
                }
            }
        },
        "api.Bar": {
            "type": "object",
            "properties": {
                "close": {
                    "type": "number"
                },
                "high": {
                    "type": "number"
                },
                "low": {
                    "type": "number"
                },
                "open": {
                    "type": "number"
                },
                "time": {
                    "type": "integer"
                },
                "volume": {
                    "type": "number"
                }
            }
        },
        "api.BuildOrderReq": {
            "type": "object",
            "required": [
                "amount",
                "marketID",
                "orderType",
                "price",
                "side"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "amount": {
                    "type": "string"
                },
                "expires": {
                    "type": "integer"
                },
                "marketID": {
                    "type": "string"
                },
                "orderType": {
                    "type": "string"
                },
                "price": {
                    "type": "string"
                },
                "side": {
                    "type": "string"
                }
            }
        },
        "api.BuildOrderResp": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "asMakerFeeRate": {
                    "type": "number"
                },
                "asTakerFeeRate": {
                    "type": "number"
                },
                "gasFeeAmount": {
                    "type": "number"
                },
                "id": {
                    "type": "string"
                },
                "json": {
                    "type": "object",
                    "$ref": "#/definitions/models.OrderJSON"
                },
                "makerRebateRate": {
                    "type": "number"
                },
                "marketID": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "side": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "api.CancelOrderReq": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "api.PlaceOrderReq": {
            "type": "object",
            "required": [
                "orderID",
                "signature"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "orderID": {
                    "type": "string"
                },
                "signature": {
                    "type": "string"
                }
            }
        },
        "api.QueryOrderResp": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "orders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Order"
                    }
                }
            }
        },
        "api.QuerySingleOrderResp": {
            "type": "object",
            "properties": {
                "order": {
                    "type": "object",
                    "$ref": "#/definitions/models.Order"
                }
            }
        },
        "api.QueryTradeResp": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "trades": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Trade"
                    }
                }
            }
        },
        "api.Response": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object"
                },
                "desc": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "api.SnapshotV2": {
            "type": "object",
            "properties": {
                "asks": {
                    "type": "array",
                    "items": {
                        "type": "\u0026{%!s(token.Pos=365) %!s(*ast.BasicLit=\u0026{366 5 2}) string}"
                    }
                },
                "bids": {
                    "type": "array",
                    "items": {
                        "type": "\u0026{%!s(token.Pos=329) %!s(*ast.BasicLit=\u0026{330 5 2}) string}"
                    }
                },
                "sequence": {
                    "type": "integer"
                }
            }
        },
        "models.Order": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "availableAmount": {
                    "type": "number"
                },
                "canceledAmount": {
                    "type": "number"
                },
                "confirmedAmount": {
                    "type": "number"
                },
                "createdAt": {
                    "type": "string"
                },
                "gasFeeAmount": {
                    "type": "number"
                },
                "id": {
                    "type": "string"
                },
                "json": {
                    "type": "string"
                },
                "makerFeeRate": {
                    "type": "number"
                },
                "makerRebateRate": {
                    "type": "number"
                },
                "marketID": {
                    "type": "string"
                },
                "pendingAmount": {
                    "type": "number"
                },
                "price": {
                    "type": "number"
                },
                "side": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "takerFeeRate": {
                    "type": "number"
                },
                "traderAddress": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "models.OrderJSON": {
            "type": "object",
            "properties": {
                "baseToken": {
                    "type": "string"
                },
                "baseTokenAmount": {
                    "type": "number"
                },
                "data": {
                    "type": "string"
                },
                "gasTokenAmount": {
                    "type": "number"
                },
                "quoteToken": {
                    "type": "string"
                },
                "quoteTokenAmount": {
                    "type": "number"
                },
                "relayer": {
                    "type": "string"
                },
                "signature": {
                    "type": "string"
                },
                "trader": {
                    "type": "string"
                }
            }
        },
        "models.Trade": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "createdAt": {
                    "type": "string"
                },
                "executedAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "maker": {
                    "type": "string"
                },
                "makerOrderID": {
                    "type": "string"
                },
                "marketID": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "sequence": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "taker": {
                    "type": "string"
                },
                "takerOrderID": {
                    "type": "string"
                },
                "takerSide": {
                    "type": "string"
                },
                "transactionHash": {
                    "type": "string"
                },
                "transactionID": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ExnomyAuthToken": {
            "type": "apiKey",
            "name": "Authorization (DEX-EXONOMY-AUTH should be like {address}#DEX-EXONOMY-AUTH@{time}#{signature})",
            "in": "header"
        }
    },
    "x-extension-openapi": {
        "example": "value on a json format"
    }
}